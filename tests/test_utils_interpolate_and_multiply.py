import pytest
import numpy as np

def test_interpolate_and_multiply():
    from scilightcon.utils import interpolate_and_multiply

    D1 = ([  0.,  25.,  50.,  75., 100., 125., 150., 175., 200., 225., 250.,
       275., 300., 325., 350., 375., 400., 425., 450., 475., 500., 525.,
       550., 575., 600., 625., 650., 675., 700., 725., 750., 775., 800.,
       825., 850., 875., 900., 925., 950., 975.], [1.11089965e-02, 2.27941809e-02, 4.39369336e-02, 7.95595087e-02,
       1.35335283e-01, 2.16265167e-01, 3.24652467e-01, 4.57833362e-01,
       6.06530660e-01, 7.54839602e-01, 8.82496903e-01, 9.69233234e-01,
       1.00000000e+00, 9.69233234e-01, 8.82496903e-01, 7.54839602e-01,
       6.06530660e-01, 4.57833362e-01, 3.24652467e-01, 2.16265167e-01,
       1.35335283e-01, 7.95595087e-02, 4.39369336e-02, 2.27941809e-02,
       1.11089965e-02, 5.08606923e-03, 2.18749112e-03, 8.83826307e-04,
       3.35462628e-04, 1.19612884e-04, 4.00652974e-05, 1.26071052e-05,
       3.72665317e-06, 1.03485421e-06, 2.69957850e-07, 6.61560164e-08,
       1.52299797e-08, 3.29371411e-09, 6.69158609e-10, 1.27711155e-10])
    
    
    D2 = ([200., 250., 300., 350., 400., 450., 500., 550., 600., 650., 700.,
       750., 800., 850., 900., 950.], [1.12535175e-07, 4.78511739e-06, 1.23409804e-04, 1.93045414e-03,
       1.83156389e-02, 1.05399225e-01, 3.67879441e-01, 7.78800783e-01,
       1.00000000e+00, 7.78800783e-01, 3.67879441e-01, 1.05399225e-01,
       1.83156389e-02, 1.93045414e-03, 1.23409804e-04, 4.78511739e-06])
    
    D3_target = ([200., 225., 250., 275., 300., 325., 350., 375., 400., 425., 450.,
       475., 500., 525., 550., 575., 600., 625., 650., 675., 700., 725.,
       750., 775., 800., 825., 850., 875., 900., 925., 950.], [6.82560338e-08, 1.84847106e-06, 4.22285128e-06, 6.21253892e-05,
       1.23409804e-04, 9.95336595e-04, 1.70361980e-03, 7.64127640e-03,
       1.11089965e-02, 2.83203959e-02, 3.42181183e-02, 5.11768448e-02,
       4.97870684e-02, 4.56146576e-02, 3.42181183e-02, 2.02731534e-02,
       1.11089965e-02, 4.52355197e-03, 1.70361980e-03, 5.06733074e-04,
       1.23409804e-04, 2.83051130e-05, 4.22285128e-06, 7.79843148e-07,
       6.82560338e-08, 1.04758773e-08, 5.21141249e-10, 6.79377282e-11,
       1.87952882e-12, 2.11118711e-13, 3.20200250e-15])
        
    D3 = interpolate_and_multiply(D1, D2)
    
    result = np.array([np.array(D3_target[0]) - np.array(D3[0]), np.array(D3_target[1]) - np.array(D3[1])])


    assert (np.shape(result) == (2, 31))
    assert (np.sum(np.abs(np.array(result[:,1]))) < 1.0e-8)
