# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

variables:
  isMaster: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]

strategy:
  matrix:
    linuxPython37:
      imageName: 'ubuntu-latest'
      python.version: '3.7'
    windowsPython311:
      imageName: 'windows-latest'
      python.version: '3.11'

pool:
  vmImage: $(imageName)

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
    pip install -r doc_requirements.txt
  displayName: 'Install dependencies'

- script: |
    pip install pytest pytest-azurepipelines
    pip install pytest-cov
    pytest --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml --cov-report=html:doc/docs/htmlcov --ignore=examples
  displayName: 'pytest'
