{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Welcome","text":""},{"location":"index.html#documentation","title":"Documentation","text":""},{"location":"development.html","title":"Development","text":""},{"location":"development.html#preparation","title":"Preparation","text":"<ul> <li>Install Python 3.11 and <code>pip</code></li> <li>Run <code>./build_tools/prepare.ps1</code> from root folder.</li> </ul>"},{"location":"development.html#building-package-on-local-machine","title":"Building package on local machine","text":"<p>Run <code>pip install -e ./</code> from root folder.</p>"},{"location":"development.html#testing","title":"Testing","text":"<p>Run <code>./build_tools/run_tests.ps1</code> from root folder.</p>"},{"location":"development.html#preview-the-documentation","title":"Preview the documentation","text":"<p>Make sure you're in the <code>doc</code> directory:</p> <pre><code>$ mkdocs serve\nINFO     -  Building documentation...\nINFO     -  Cleaning site directory\nINFO     -  Documentation built in 0.31 seconds\nINFO     -  [12:07:03] Watching paths for changes: 'docs', 'mkdocs.yml', 'C:\\code\\lightcon-scipack\\scilightcon'\nINFO     -  [12:07:03] Serving on http://127.0.0.1:8000/\n</code></pre> <p>Open up <code>http://127.0.0.1:8000/</code> in your browser, and you'll see the documentation page being displayed.</p>"},{"location":"development.html#build-the-documentation","title":"Build the documentation","text":"<p>Make sure you're in the <code>doc</code> directory:</p> <pre><code>mkdocs build\n</code></pre> <p>This will create a new directory, named <code>site</code>. Open <code>index.html</code> from there.</p>"},{"location":"development.html#general","title":"General","text":"<ul> <li>Do not create new modules</li> <li>All methods and classes:<ul> <li>must be referenced in the <code>__init__.py</code> file of the corresponding module</li> <li>must be added to <code>__all__</code> list in <code>__init__.py</code></li> <li>must have a corresponding unit test</li> <li>must be documented and documentation must contain use example</li> </ul> </li> </ul>"},{"location":"development.html#style-guide","title":"Style guide","text":"<ul> <li>Use Google Style Guide for coding</li> <li>Comment methods, classes using Google-style docstrings</li> </ul>"},{"location":"development.html#unit-tests","title":"Unit tests","text":"<p>Unit tests are prepared with <code>pytest</code></p>"},{"location":"user_manual.html","title":"User manual","text":""},{"location":"user_manual.html#user-manual-to-be-here","title":"USER MANUAL to be here","text":""},{"location":"reference/control-reference.html","title":"control","text":"<p>Module for automatized control and feedback</p>"},{"location":"reference/datasets-reference.html","title":"datasets","text":"<p>Module for loading datasets</p>"},{"location":"reference/datasets-reference.html#scilightcon.datasets-functions","title":"Functions","text":""},{"location":"reference/datasets-reference.html#scilightcon.datasets.load_EKSMA_OPTICS_mirror_reflections","title":"<code>scilightcon.datasets.load_EKSMA_OPTICS_mirror_reflections(material)</code>","text":"<p>Loads wavelength-dependent reflection dataset of metal coated mirrors by EKSMA OPTICS.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; from scilightcon.datasets import load_EKSMA_OPTICS_mirror_reflections\n&gt;&gt;&gt; data, header = load_EKSMA_OPTICS_mirror_reflections('Ag')\n&gt;&gt;&gt; np.shape(data)\n(172, 2)\n&gt;&gt;&gt; header\n['Wavelength (nm)', 'Reflection (%)']\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>material</code> <code>str</code> <p><code>Ag</code>, <code>Au</code> or <code>Al</code></p> required <p>Returns:</p> Name Type Description <code>data</code> <code>np.ndarray</code> <p>ndarray of shape (n_samples, n_columns) A 2D array of data with headers excluded.</p> <code>header</code> <code>list</code> <p>list of shape (n_columns) of column names or empty strings</p>"},{"location":"reference/fitting-reference.html","title":"fitting","text":"<p>Module for data fitting routines</p>"},{"location":"reference/foo-reference.html","title":"foo","text":"<p>This is an example module</p>"},{"location":"reference/foo-reference.html#scilightcon.foo-functions","title":"Functions","text":""},{"location":"reference/foo-reference.html#scilightcon.foo.add","title":"<code>scilightcon.foo.add(a, b)</code>","text":"<p>Compute and return the sum of two numbers.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; add(4.0, 2.0)\n6.0\n&gt;&gt;&gt; add(4, 2)\n6.0\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>a</code> <code>float</code> <p>A number representing the first addend in the addition.</p> required <code>b</code> <code>float</code> <p>A number representing the second addend in the addition.</p> required <p>Returns:</p> Type Description <code>float</code> <p>A number representing the arithmetic sum of <code>a</code> and <code>b</code>.</p>"},{"location":"reference/imaging-reference.html","title":"imaging","text":"<p>Module for vision and imaging routines</p>"},{"location":"reference/optics-reference.html","title":"optics","text":"<p>Module for calculating optical parameters</p>"},{"location":"reference/plot-reference.html","title":"plot","text":"<p>Module for plotting functions and helpers</p>"},{"location":"reference/signals-reference.html","title":"signals","text":"<p>Module for signal processing routines</p>"}]}